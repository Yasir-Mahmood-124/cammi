// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";
// import { Providers } from "@/redux/Providers"; // redux provider
// import { ThemeRegistry } from "@/theme/ThemeRegistry"; // mui theme provider
// import AppWrapper from "./AppWrapper"; // authentication wrapper



// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
//   viewport: "width=device-width, initial-scale=1",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en">
//       <body className={`${geistSans.variable} ${geistMono.variable}`}>
//         <Providers>
//           <ThemeRegistry>
//             <AppWrapper>{children}</AppWrapper>
//           </ThemeRegistry>
//         </Providers>
//       </body>
//     </html>
//   );
// }


import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { Providers } from "@/redux/Providers"; // redux provider
import { ThemeRegistry } from "@/theme/ThemeRegistry"; // mui theme provider
import AppWrapper from "./AppWrapper"; // authentication wrapper

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
  // ðŸ‘‡ You can keep this, but also add the manual <meta> below
  viewport: "width=device-width, initial-scale=1",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        {/* âœ… Explicit viewport ensures consistent scaling */}
        <meta name="viewport" content="width=device-width, initial-scale=1" />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <Providers>
          <ThemeRegistry>
            <AppWrapper>{children}</AppWrapper>
          </ThemeRegistry>
        </Providers>
      </body>
    </html>
  );
}
